from aiogram.types import CallbackQuery, LinkPreviewOptions
from aiogram import Bot, Router, F

import logging
from services.googlesheets import get_list_anketa, update_status_anketa
from handlers.scheduler import send_ton
from TonCrypto.contract.CryptoHelper import TonWallet
from database.requests import increase_ton_balance, update_status, UserStatus, _get_username_from_id,\
    update_user_ton_addr, get_user_ton_addr_by_id, get_user_from_id

router = Router()


@router.callback_query(F.data.startswith('schcancel_pay_'))
async def process_cancel_pay(callback: CallbackQuery, bot: Bot):
    """
    –û—Ç–º–µ–Ω–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è, –∏–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–Ω–∫–µ—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    """
    logging.info(f'process_cancel_pay: {callback.message.chat.id}-{callback.data}')
    await bot.delete_message(chat_id=callback.message.chat.id,
                             message_id=callback.message.message_id)
    id_anketa = int(callback.data.split('_')[2])
    info_anketa = get_list_anketa(id_anketa=id_anketa)
    await callback.answer(text=f'–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{info_anketa[2]} –æ—Ç–º–µ–Ω–µ–Ω–æ', show_alert=True)
    update_status_anketa(status='‚ùå', telegram_id=int(info_anketa[1]))
    try:
        await bot.send_message(chat_id=int(info_anketa[1]),
                               text='–û–ø–ª–∞—Ç–∞ –±—ã–ª–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π')
    except:
        pass
    await callback.answer()
    await send_ton(bot=bot)


@router.callback_query(F.data.startswith('schconfirm_pay_'))
async def process_cancel_pay(callback: CallbackQuery, bot: Bot):
    """
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–µ—Ä—É, –∑–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    """
    logging.info(f'process_cancel_pay: {callback.message.chat.id}-{callback.data}')
    await bot.delete_message(chat_id=callback.message.chat.id,
                             message_id=callback.message.message_id)
    id_anketa = int(callback.data.split('_')[2])
    info_anketa = get_list_anketa(id_anketa=id_anketa)
    user = await get_user_from_id(int(info_anketa[1]))
    if user.status != UserStatus.payed:
        await callback.answer(text=f'–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{info_anketa[2]} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ', show_alert=True)
        user_id = info_anketa[1]
        user_addr = await get_user_ton_addr_by_id(user_id)

        tr = await TonWallet.transfer(amount=0.001, to_addr=user_addr)
        if tr == 'ok':
            await increase_ton_balance(tg_id=int(info_anketa[1]), s=0.001)
            update_status_anketa(status='üí∞', telegram_id=int(info_anketa[1]))
            await update_status(int(info_anketa[1]), UserStatus.payed)

            try:
                await bot.send_message(chat_id=int(info_anketa[1]),
                                       text=f'–í–∞–º –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ 0.001 TON\n\n'
                                            f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∫–æ—à–µ–ª–µ–∫'
                                            f' <a href="https://tonscan.org/address/{user_addr}>–∫–æ—à–µ–ª–µ–∫.</a>',
                                       parse_mode='html',
                                       link_preview_options=LinkPreviewOptions(is_disabled=True))
            except:
                pass
        if int(info_anketa[3]):
            tr = await TonWallet.transfer(amount=0.001, to_addr=user_addr)
            if tr == 'ok':

                await increase_ton_balance(tg_id=int(info_anketa[3]), s=0.001)

                try:
                    await bot.send_message(chat_id=int(info_anketa[3]),
                                           text=f'–í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ <strong>0.15 TON</strong> –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                                                f' @{await _get_username_from_id(int(info_anketa[1]))}',
                                           parse_mode='html')
                except:
                    pass
    else:
        await callback.answer(text='–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∏–ª –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ!',
                              show_alert=True)
    await callback.answer()
    await send_ton(bot=bot)
