from services.googlesheets import get_list_all_anketa, get_list_anketa, update_status_anketa
from keyboards.keybord_scheduler import keyboards_confirm_pay
from crypto.CryptoHelper import pay_ton_to
from aiogram import Bot, Router, F
from aiogram.types import CallbackQuery
from config_data.config import Config, load_config
import requests
import logging
config: Config = load_config()
router = Router()


def get_telegram_user(user_id, bot_token):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
    :param user_id:
    :param bot_token:
    :return:
    """
    url = f'https://api.telegram.org/bot{bot_token}/getChat'
    data = {'chat_id': user_id}
    response = requests.post(url, data=data)
    return response.json()


async def send_ton(bot: Bot):
    """
    —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
    """
    # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø–æ–ª–Ω–∏–≤—à–∏—Ö –∞–Ω–∫–µ—Ç—É
    list_anketa = get_list_all_anketa()
    anketa = 0
    # –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç–æ–π —Ç–æ –∏—â–µ–º —Å—Ç–∞—Ç—É—Å –∞–Ω–∫–µ—Ç—ã '‚úÖ'
    if list_anketa:
        for item in list_anketa:
            # –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
            if item[7] == '‚úÖ':
                anketa = item
                break
        # –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–π —Ü–µ–ª–µ–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ—Ç —Ç–æ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∞
        else:
            list_super_admin = config.tg_bot.admin_ids.split(',')
            for id_superadmin in list_super_admin:
                result = get_telegram_user(user_id=int(id_superadmin),
                                           bot_token=config.tg_bot.token)
                if 'result' in result:
                    try:
                        await bot.send_message(chat_id=int(id_superadmin),
                                               text=f'–ù–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–ø–æ–ª–Ω–∏–≤—à–∏—Ö –∞–Ω–∫–µ—Ç—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é –∏'
                                                    f' —Å–æ–≤–µ—Ä—à–∏–≤—à–∏—Ö —Ü–µ–ª–µ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è!')
                    except:
                        pass
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞ –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
        list_super_admin = config.tg_bot.admin_ids.split(',')
        for id_superadmin in list_super_admin:
            result = get_telegram_user(user_id=int(id_superadmin),
                                       bot_token=config.tg_bot.token)
            if 'result' in result:
                try:
                    await bot.send_message(chat_id=int(id_superadmin),
                                           text=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {anketa[2]}',
                                           reply_markup=keyboards_confirm_pay(id_anketa=anketa[0]))
                except:
                    pass
    # –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π —Ç–æ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∞
    else:
        list_super_admin = config.tg_bot.admin_ids.split(',')
        for id_superadmin in list_super_admin:
            result = get_telegram_user(user_id=int(id_superadmin),
                                       bot_token=config.tg_bot.token)
            if 'result' in result:
                try:
                    await bot.send_message(chat_id=int(id_superadmin),
                                           text=f'–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã–ø–æ–ª–Ω–∏–≤—à–∏—Ö —Ü–µ–ª–µ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è'
                                                f' –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è')
                except:
                    pass


@router.callback_query(F.data.startswith('cancel_pay_'))
async def process_cancel_pay(callback: CallbackQuery, bot: Bot):
    """
    –û—Ç–º–µ–Ω–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è, –∏–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–Ω–∫–µ—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    """
    logging.info(f'process_cancel_pay: {callback.message.chat.id}')
    id_anketa = int(callback.data.split('_')[2])
    info_anketa = get_list_anketa(id_anketa=id_anketa)
    await callback.answer(text=f'–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{info_anketa[2]} –æ—Ç–º–µ–Ω–µ–Ω–æ', show_alert=True)
    update_status_anketa(id_anketa=id_anketa, status='‚ùå')
    await send_ton(bot=bot)


@router.callback_query(F.data.startswith('confirm_pay_'))
async def process_cancel_pay(callback: CallbackQuery, bot: Bot):
    """
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–µ—Ä—É, –∑–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
    """
    logging.info(f'process_cancel_pay: {callback.message.chat.id}')
    id_anketa = int(callback.data.split('_')[2])
    info_anketa = get_list_anketa(id_anketa=id_anketa)
    await callback.answer(text=f'–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{info_anketa[2]} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ', show_alert=True)
    update_status_anketa(id_anketa=id_anketa, status='üí∞')
    await pay_ton_to(user_id=info_anketa[1], amount=0.5)
    await pay_ton_to(user_id=info_anketa[3], amount=0.2)
    await send_ton(bot=bot)
